{
	"id": "e7a95dc3a575cccf2050f59777f3fcc9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"armstrong.sol": {
				"content": "//SPDX-License-Identifier: UNLICENSED\r\npragma solidity >=0.7.0 < 0.9.0;\r\n\r\ncontract Armstrong{\r\n    function checkArmstrong(uint num) public pure returns(string memory){\r\n        uint digit = digitCalculate(num);\r\n        uint armstrongNumber = calculateNum(num, digit);\r\n        if(num == armstrongNumber){\r\n            return (\"Number is armstrong\");\r\n        }\r\n        else{\r\n            return (\"Number is not arm-strong\");\r\n        }\r\n    }\r\n    function digitCalculate(uint number) private pure returns(uint){\r\n        uint digit;\r\n        while(number != 0){\r\n            digit++;\r\n            number = number/10;\r\n        }\r\n        return digit;\r\n    }\r\n    function calculateNum(uint Num, uint digit) private pure returns(uint){\r\n        uint temp;\r\n        while(Num != 0){\r\n            temp = temp + calculatepower(Num%10, digit);\r\n            Num = Num/10;\r\n        }\r\n        return temp;\r\n    }\r\n    function calculatepower(uint a, uint power) private pure returns(uint){\r\n        uint result =1;\r\n        for(uint i=0; i<power; i++){\r\n            result *= a;\r\n        }\r\n        return result;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"armstrong.sol": {
				"Armstrong": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "num",
									"type": "uint256"
								}
							],
							"name": "checkArmstrong",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"armstrong.sol\":75:1121  contract Armstrong{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"armstrong.sol\":75:1121  contract Armstrong{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb6e12936\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"armstrong.sol\":100:446  function checkArmstrong(uint num) public pure returns(string memory){... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"armstrong.sol\":154:167  string memory */\n      0x60\n        /* \"armstrong.sol\":179:189  uint digit */\n      0x00\n        /* \"armstrong.sol\":192:211  digitCalculate(num) */\n      tag_11\n        /* \"armstrong.sol\":207:210  num */\n      dup4\n        /* \"armstrong.sol\":192:206  digitCalculate */\n      tag_12\n        /* \"armstrong.sol\":192:211  digitCalculate(num) */\n      jump\t// in\n    tag_11:\n        /* \"armstrong.sol\":179:211  uint digit = digitCalculate(num) */\n      swap1\n      pop\n        /* \"armstrong.sol\":222:242  uint armstrongNumber */\n      0x00\n        /* \"armstrong.sol\":245:269  calculateNum(num, digit) */\n      tag_13\n        /* \"armstrong.sol\":258:261  num */\n      dup5\n        /* \"armstrong.sol\":263:268  digit */\n      dup4\n        /* \"armstrong.sol\":245:257  calculateNum */\n      tag_14\n        /* \"armstrong.sol\":245:269  calculateNum(num, digit) */\n      jump\t// in\n    tag_13:\n        /* \"armstrong.sol\":222:269  uint armstrongNumber = calculateNum(num, digit) */\n      swap1\n      pop\n        /* \"armstrong.sol\":290:305  armstrongNumber */\n      dup1\n        /* \"armstrong.sol\":283:286  num */\n      dup5\n        /* \"armstrong.sol\":283:305  num == armstrongNumber */\n      sub\n        /* \"armstrong.sol\":280:439  if(num == armstrongNumber){... */\n      tag_15\n      jumpi\n        /* \"armstrong.sol\":321:351  return (\"Number is armstrong\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x13\n      dup2\n      mstore\n      0x20\n      add\n      0x4e756d6265722069732061726d7374726f6e6700000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_10)\n        /* \"armstrong.sol\":280:439  if(num == armstrongNumber){... */\n    tag_15:\n        /* \"armstrong.sol\":392:427  return (\"Number is not arm-strong\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      0x4e756d626572206973206e6f742061726d2d7374726f6e670000000000000000\n      dup2\n      mstore\n      pop\n      swap3\n      pop\n      pop\n      pop\n        /* \"armstrong.sol\":100:446  function checkArmstrong(uint num) public pure returns(string memory){... */\n    tag_10:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"armstrong.sol\":452:662  function digitCalculate(uint number) private pure returns(uint){... */\n    tag_12:\n        /* \"armstrong.sol\":510:514  uint */\n      0x00\n        /* \"armstrong.sol\":526:536  uint digit */\n      dup1\n        /* \"armstrong.sol\":547:632  while(number != 0){... */\n    tag_18:\n        /* \"armstrong.sol\":563:564  0 */\n      0x00\n        /* \"armstrong.sol\":553:559  number */\n      dup4\n        /* \"armstrong.sol\":553:564  number != 0 */\n      eq\n        /* \"armstrong.sol\":547:632  while(number != 0){... */\n      tag_19\n      jumpi\n        /* \"armstrong.sol\":580:587  digit++ */\n      dup1\n      dup1\n      tag_20\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      swap2\n      pop\n      pop\n        /* \"armstrong.sol\":618:620  10 */\n      0x0a\n        /* \"armstrong.sol\":611:617  number */\n      dup4\n        /* \"armstrong.sol\":611:620  number/10 */\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n        /* \"armstrong.sol\":602:620  number = number/10 */\n      swap3\n      pop\n        /* \"armstrong.sol\":547:632  while(number != 0){... */\n      jump(tag_18)\n    tag_19:\n        /* \"armstrong.sol\":649:654  digit */\n      dup1\n        /* \"armstrong.sol\":642:654  return digit */\n      swap2\n      pop\n      pop\n        /* \"armstrong.sol\":452:662  function digitCalculate(uint number) private pure returns(uint){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"armstrong.sol\":668:910  function calculateNum(uint Num, uint digit) private pure returns(uint){... */\n    tag_14:\n        /* \"armstrong.sol\":733:737  uint */\n      0x00\n        /* \"armstrong.sol\":749:758  uint temp */\n      dup1\n        /* \"armstrong.sol\":769:881  while(Num != 0){... */\n    tag_25:\n        /* \"armstrong.sol\":782:783  0 */\n      0x00\n        /* \"armstrong.sol\":775:778  Num */\n      dup5\n        /* \"armstrong.sol\":775:783  Num != 0 */\n      eq\n        /* \"armstrong.sol\":769:881  while(Num != 0){... */\n      tag_26\n      jumpi\n        /* \"armstrong.sol\":813:842  calculatepower(Num%10, digit) */\n      tag_27\n        /* \"armstrong.sol\":832:834  10 */\n      0x0a\n        /* \"armstrong.sol\":828:831  Num */\n      dup6\n        /* \"armstrong.sol\":828:834  Num%10 */\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n        /* \"armstrong.sol\":836:841  digit */\n      dup5\n        /* \"armstrong.sol\":813:827  calculatepower */\n      tag_30\n        /* \"armstrong.sol\":813:842  calculatepower(Num%10, digit) */\n      jump\t// in\n    tag_27:\n        /* \"armstrong.sol\":806:810  temp */\n      dup2\n        /* \"armstrong.sol\":806:842  temp + calculatepower(Num%10, digit) */\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"armstrong.sol\":799:842  temp = temp + calculatepower(Num%10, digit) */\n      swap1\n      pop\n        /* \"armstrong.sol\":867:869  10 */\n      0x0a\n        /* \"armstrong.sol\":863:866  Num */\n      dup5\n        /* \"armstrong.sol\":863:869  Num/10 */\n      tag_33\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_33:\n        /* \"armstrong.sol\":857:869  Num = Num/10 */\n      swap4\n      pop\n        /* \"armstrong.sol\":769:881  while(Num != 0){... */\n      jump(tag_25)\n    tag_26:\n        /* \"armstrong.sol\":898:902  temp */\n      dup1\n        /* \"armstrong.sol\":891:902  return temp */\n      swap2\n      pop\n      pop\n        /* \"armstrong.sol\":668:910  function calculateNum(uint Num, uint digit) private pure returns(uint){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"armstrong.sol\":916:1118  function calculatepower(uint a, uint power) private pure returns(uint){... */\n    tag_30:\n        /* \"armstrong.sol\":981:985  uint */\n      0x00\n        /* \"armstrong.sol\":997:1008  uint result */\n      dup1\n        /* \"armstrong.sol\":1010:1011  1 */\n      0x01\n        /* \"armstrong.sol\":997:1011  uint result =1 */\n      swap1\n      pop\n        /* \"armstrong.sol\":1026:1032  uint i */\n      0x00\n        /* \"armstrong.sol\":1022:1087  for(uint i=0; i<power; i++){... */\n    tag_35:\n        /* \"armstrong.sol\":1038:1043  power */\n      dup4\n        /* \"armstrong.sol\":1036:1037  i */\n      dup2\n        /* \"armstrong.sol\":1036:1043  i<power */\n      lt\n        /* \"armstrong.sol\":1022:1087  for(uint i=0; i<power; i++){... */\n      iszero\n      tag_36\n      jumpi\n        /* \"armstrong.sol\":1074:1075  a */\n      dup5\n        /* \"armstrong.sol\":1064:1075  result *= a */\n      dup3\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      swap2\n      pop\n        /* \"armstrong.sol\":1045:1048  i++ */\n      dup1\n      dup1\n      tag_40\n      swap1\n      tag_21\n      jump\t// in\n    tag_40:\n      swap2\n      pop\n      pop\n        /* \"armstrong.sol\":1022:1087  for(uint i=0; i<power; i++){... */\n      jump(tag_35)\n    tag_36:\n      pop\n        /* \"armstrong.sol\":1104:1110  result */\n      dup1\n        /* \"armstrong.sol\":1097:1110  return result */\n      swap2\n      pop\n      pop\n        /* \"armstrong.sol\":916:1118  function calculatepower(uint a, uint power) private pure returns(uint){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_42:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_44:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_45:\n        /* \"#utility.yul\":490:514   */\n      tag_60\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_44\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_61\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_61:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_46:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_63\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_45\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_6:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_65\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_66\n      tag_42\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":766:885   */\n    tag_65:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_67\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_46\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1124   */\n    tag_47:\n        /* \"#utility.yul\":1077:1083   */\n      0x00\n        /* \"#utility.yul\":1111:1116   */\n      dup2\n        /* \"#utility.yul\":1105:1117   */\n      mload\n        /* \"#utility.yul\":1095:1117   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1124   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1130:1299   */\n    tag_48:\n        /* \"#utility.yul\":1214:1225   */\n      0x00\n        /* \"#utility.yul\":1248:1254   */\n      dup3\n        /* \"#utility.yul\":1243:1246   */\n      dup3\n        /* \"#utility.yul\":1236:1255   */\n      mstore\n        /* \"#utility.yul\":1288:1292   */\n      0x20\n        /* \"#utility.yul\":1283:1286   */\n      dup3\n        /* \"#utility.yul\":1279:1293   */\n      add\n        /* \"#utility.yul\":1264:1293   */\n      swap1\n      pop\n        /* \"#utility.yul\":1130:1299   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1305:1551   */\n    tag_49:\n        /* \"#utility.yul\":1386:1387   */\n      0x00\n        /* \"#utility.yul\":1396:1509   */\n    tag_71:\n        /* \"#utility.yul\":1410:1416   */\n      dup4\n        /* \"#utility.yul\":1407:1408   */\n      dup2\n        /* \"#utility.yul\":1404:1417   */\n      lt\n        /* \"#utility.yul\":1396:1509   */\n      iszero\n      tag_73\n      jumpi\n        /* \"#utility.yul\":1495:1496   */\n      dup1\n        /* \"#utility.yul\":1490:1493   */\n      dup3\n        /* \"#utility.yul\":1486:1497   */\n      add\n        /* \"#utility.yul\":1480:1498   */\n      mload\n        /* \"#utility.yul\":1476:1477   */\n      dup2\n        /* \"#utility.yul\":1471:1474   */\n      dup5\n        /* \"#utility.yul\":1467:1478   */\n      add\n        /* \"#utility.yul\":1460:1499   */\n      mstore\n        /* \"#utility.yul\":1432:1434   */\n      0x20\n        /* \"#utility.yul\":1429:1430   */\n      dup2\n        /* \"#utility.yul\":1425:1435   */\n      add\n        /* \"#utility.yul\":1420:1435   */\n      swap1\n      pop\n        /* \"#utility.yul\":1396:1509   */\n      jump(tag_71)\n    tag_73:\n        /* \"#utility.yul\":1543:1544   */\n      0x00\n        /* \"#utility.yul\":1534:1540   */\n      dup5\n        /* \"#utility.yul\":1529:1532   */\n      dup5\n        /* \"#utility.yul\":1525:1541   */\n      add\n        /* \"#utility.yul\":1518:1545   */\n      mstore\n        /* \"#utility.yul\":1367:1551   */\n      pop\n        /* \"#utility.yul\":1305:1551   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1557:1659   */\n    tag_50:\n        /* \"#utility.yul\":1598:1604   */\n      0x00\n        /* \"#utility.yul\":1649:1651   */\n      0x1f\n        /* \"#utility.yul\":1645:1652   */\n      not\n        /* \"#utility.yul\":1640:1642   */\n      0x1f\n        /* \"#utility.yul\":1633:1638   */\n      dup4\n        /* \"#utility.yul\":1629:1643   */\n      add\n        /* \"#utility.yul\":1625:1653   */\n      and\n        /* \"#utility.yul\":1615:1653   */\n      swap1\n      pop\n        /* \"#utility.yul\":1557:1659   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1665:2042   */\n    tag_51:\n        /* \"#utility.yul\":1753:1756   */\n      0x00\n        /* \"#utility.yul\":1781:1820   */\n      tag_76\n        /* \"#utility.yul\":1814:1819   */\n      dup3\n        /* \"#utility.yul\":1781:1820   */\n      tag_47\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1836:1907   */\n      tag_77\n        /* \"#utility.yul\":1900:1906   */\n      dup2\n        /* \"#utility.yul\":1895:1898   */\n      dup6\n        /* \"#utility.yul\":1836:1907   */\n      tag_48\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":1829:1907   */\n      swap4\n      pop\n        /* \"#utility.yul\":1916:1981   */\n      tag_78\n        /* \"#utility.yul\":1974:1980   */\n      dup2\n        /* \"#utility.yul\":1969:1972   */\n      dup6\n        /* \"#utility.yul\":1962:1966   */\n      0x20\n        /* \"#utility.yul\":1955:1960   */\n      dup7\n        /* \"#utility.yul\":1951:1967   */\n      add\n        /* \"#utility.yul\":1916:1981   */\n      tag_49\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":2006:2035   */\n      tag_79\n        /* \"#utility.yul\":2028:2034   */\n      dup2\n        /* \"#utility.yul\":2006:2035   */\n      tag_50\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2001:2004   */\n      dup5\n        /* \"#utility.yul\":1997:2036   */\n      add\n        /* \"#utility.yul\":1990:2036   */\n      swap2\n      pop\n        /* \"#utility.yul\":1757:2042   */\n      pop\n        /* \"#utility.yul\":1665:2042   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2048:2361   */\n    tag_9:\n        /* \"#utility.yul\":2161:2165   */\n      0x00\n        /* \"#utility.yul\":2199:2201   */\n      0x20\n        /* \"#utility.yul\":2188:2197   */\n      dup3\n        /* \"#utility.yul\":2184:2202   */\n      add\n        /* \"#utility.yul\":2176:2202   */\n      swap1\n      pop\n        /* \"#utility.yul\":2248:2257   */\n      dup2\n        /* \"#utility.yul\":2242:2246   */\n      dup2\n        /* \"#utility.yul\":2238:2258   */\n      sub\n        /* \"#utility.yul\":2234:2235   */\n      0x00\n        /* \"#utility.yul\":2223:2232   */\n      dup4\n        /* \"#utility.yul\":2219:2236   */\n      add\n        /* \"#utility.yul\":2212:2259   */\n      mstore\n        /* \"#utility.yul\":2276:2354   */\n      tag_81\n        /* \"#utility.yul\":2349:2353   */\n      dup2\n        /* \"#utility.yul\":2340:2346   */\n      dup5\n        /* \"#utility.yul\":2276:2354   */\n      tag_51\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":2268:2354   */\n      swap1\n      pop\n        /* \"#utility.yul\":2048:2361   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2367:2547   */\n    tag_52:\n        /* \"#utility.yul\":2415:2492   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2412:2413   */\n      0x00\n        /* \"#utility.yul\":2405:2493   */\n      mstore\n        /* \"#utility.yul\":2512:2516   */\n      0x11\n        /* \"#utility.yul\":2509:2510   */\n      0x04\n        /* \"#utility.yul\":2502:2517   */\n      mstore\n        /* \"#utility.yul\":2536:2540   */\n      0x24\n        /* \"#utility.yul\":2533:2534   */\n      0x00\n        /* \"#utility.yul\":2526:2541   */\n      revert\n        /* \"#utility.yul\":2553:2786   */\n    tag_21:\n        /* \"#utility.yul\":2592:2595   */\n      0x00\n        /* \"#utility.yul\":2615:2639   */\n      tag_84\n        /* \"#utility.yul\":2633:2638   */\n      dup3\n        /* \"#utility.yul\":2615:2639   */\n      tag_44\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":2606:2639   */\n      swap2\n      pop\n        /* \"#utility.yul\":2661:2727   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2654:2659   */\n      dup3\n        /* \"#utility.yul\":2651:2728   */\n      sub\n        /* \"#utility.yul\":2648:2751   */\n      tag_85\n      jumpi\n        /* \"#utility.yul\":2731:2749   */\n      tag_86\n      tag_52\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":2648:2751   */\n    tag_85:\n        /* \"#utility.yul\":2778:2779   */\n      0x01\n        /* \"#utility.yul\":2771:2776   */\n      dup3\n        /* \"#utility.yul\":2767:2780   */\n      add\n        /* \"#utility.yul\":2760:2780   */\n      swap1\n      pop\n        /* \"#utility.yul\":2553:2786   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2792:2972   */\n    tag_53:\n        /* \"#utility.yul\":2840:2917   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2837:2838   */\n      0x00\n        /* \"#utility.yul\":2830:2918   */\n      mstore\n        /* \"#utility.yul\":2937:2941   */\n      0x12\n        /* \"#utility.yul\":2934:2935   */\n      0x04\n        /* \"#utility.yul\":2927:2942   */\n      mstore\n        /* \"#utility.yul\":2961:2965   */\n      0x24\n        /* \"#utility.yul\":2958:2959   */\n      0x00\n        /* \"#utility.yul\":2951:2966   */\n      revert\n        /* \"#utility.yul\":2978:3163   */\n    tag_23:\n        /* \"#utility.yul\":3018:3019   */\n      0x00\n        /* \"#utility.yul\":3035:3055   */\n      tag_89\n        /* \"#utility.yul\":3053:3054   */\n      dup3\n        /* \"#utility.yul\":3035:3055   */\n      tag_44\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":3030:3055   */\n      swap2\n      pop\n        /* \"#utility.yul\":3069:3089   */\n      tag_90\n        /* \"#utility.yul\":3087:3088   */\n      dup4\n        /* \"#utility.yul\":3069:3089   */\n      tag_44\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":3064:3089   */\n      swap3\n      pop\n        /* \"#utility.yul\":3108:3109   */\n      dup3\n        /* \"#utility.yul\":3098:3133   */\n      tag_91\n      jumpi\n        /* \"#utility.yul\":3113:3131   */\n      tag_92\n      tag_53\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":3098:3133   */\n    tag_91:\n        /* \"#utility.yul\":3155:3156   */\n      dup3\n        /* \"#utility.yul\":3152:3153   */\n      dup3\n        /* \"#utility.yul\":3148:3157   */\n      div\n        /* \"#utility.yul\":3143:3157   */\n      swap1\n      pop\n        /* \"#utility.yul\":2978:3163   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3169:3345   */\n    tag_29:\n        /* \"#utility.yul\":3201:3202   */\n      0x00\n        /* \"#utility.yul\":3218:3238   */\n      tag_94\n        /* \"#utility.yul\":3236:3237   */\n      dup3\n        /* \"#utility.yul\":3218:3238   */\n      tag_44\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":3213:3238   */\n      swap2\n      pop\n        /* \"#utility.yul\":3252:3272   */\n      tag_95\n        /* \"#utility.yul\":3270:3271   */\n      dup4\n        /* \"#utility.yul\":3252:3272   */\n      tag_44\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":3247:3272   */\n      swap3\n      pop\n        /* \"#utility.yul\":3291:3292   */\n      dup3\n        /* \"#utility.yul\":3281:3316   */\n      tag_96\n      jumpi\n        /* \"#utility.yul\":3296:3314   */\n      tag_97\n      tag_53\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":3281:3316   */\n    tag_96:\n        /* \"#utility.yul\":3337:3338   */\n      dup3\n        /* \"#utility.yul\":3334:3335   */\n      dup3\n        /* \"#utility.yul\":3330:3339   */\n      mod\n        /* \"#utility.yul\":3325:3339   */\n      swap1\n      pop\n        /* \"#utility.yul\":3169:3345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3351:3542   */\n    tag_32:\n        /* \"#utility.yul\":3391:3394   */\n      0x00\n        /* \"#utility.yul\":3410:3430   */\n      tag_99\n        /* \"#utility.yul\":3428:3429   */\n      dup3\n        /* \"#utility.yul\":3410:3430   */\n      tag_44\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":3405:3430   */\n      swap2\n      pop\n        /* \"#utility.yul\":3444:3464   */\n      tag_100\n        /* \"#utility.yul\":3462:3463   */\n      dup4\n        /* \"#utility.yul\":3444:3464   */\n      tag_44\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":3439:3464   */\n      swap3\n      pop\n        /* \"#utility.yul\":3487:3488   */\n      dup3\n        /* \"#utility.yul\":3484:3485   */\n      dup3\n        /* \"#utility.yul\":3480:3489   */\n      add\n        /* \"#utility.yul\":3473:3489   */\n      swap1\n      pop\n        /* \"#utility.yul\":3508:3511   */\n      dup1\n        /* \"#utility.yul\":3505:3506   */\n      dup3\n        /* \"#utility.yul\":3502:3512   */\n      gt\n        /* \"#utility.yul\":3499:3535   */\n      iszero\n      tag_101\n      jumpi\n        /* \"#utility.yul\":3515:3533   */\n      tag_102\n      tag_52\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":3499:3535   */\n    tag_101:\n        /* \"#utility.yul\":3351:3542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3958   */\n    tag_39:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3611:3631   */\n      tag_104\n        /* \"#utility.yul\":3629:3630   */\n      dup3\n        /* \"#utility.yul\":3611:3631   */\n      tag_44\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":3606:3631   */\n      swap2\n      pop\n        /* \"#utility.yul\":3645:3665   */\n      tag_105\n        /* \"#utility.yul\":3663:3664   */\n      dup4\n        /* \"#utility.yul\":3645:3665   */\n      tag_44\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":3640:3665   */\n      swap3\n      pop\n        /* \"#utility.yul\":3700:3701   */\n      dup3\n        /* \"#utility.yul\":3697:3698   */\n      dup3\n        /* \"#utility.yul\":3693:3702   */\n      mul\n        /* \"#utility.yul\":3722:3752   */\n      tag_106\n        /* \"#utility.yul\":3740:3751   */\n      dup2\n        /* \"#utility.yul\":3722:3752   */\n      tag_44\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":3711:3752   */\n      swap2\n      pop\n        /* \"#utility.yul\":3901:3902   */\n      dup3\n        /* \"#utility.yul\":3892:3899   */\n      dup3\n        /* \"#utility.yul\":3888:3903   */\n      div\n        /* \"#utility.yul\":3885:3886   */\n      dup5\n        /* \"#utility.yul\":3882:3904   */\n      eq\n        /* \"#utility.yul\":3862:3863   */\n      dup4\n        /* \"#utility.yul\":3855:3864   */\n      iszero\n        /* \"#utility.yul\":3835:3918   */\n      or\n        /* \"#utility.yul\":3812:3951   */\n      tag_107\n      jumpi\n        /* \"#utility.yul\":3931:3949   */\n      tag_108\n      tag_52\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":3812:3951   */\n    tag_107:\n        /* \"#utility.yul\":3596:3958   */\n      pop\n        /* \"#utility.yul\":3548:3958   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cccb4df30ec8a16696495c997e06e838c1e2749780bc6f12b6b44a5162b5881164736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610493806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063b6e1293614610030575b600080fd5b61004a60048036038101906100459190610200565b610060565b60405161005791906102bd565b60405180910390f35b6060600061006d83610103565b9050600061007b848361013a565b90508084036100c3576040518060400160405280601381526020017f4e756d6265722069732061726d7374726f6e6700000000000000000000000000815250925050506100fe565b6040518060400160405280601881526020017f4e756d626572206973206e6f742061726d2d7374726f6e670000000000000000815250925050505b919050565b6000805b6000831461013157808061011a9061030e565b915050600a8361012a9190610385565b9250610107565b80915050919050565b6000805b6000841461017d5761015c600a8561015691906103b6565b84610187565b8161016791906103e7565b9050600a846101769190610385565b935061013e565b8091505092915050565b6000806001905060005b838110156101ba5784826101a5919061041b565b915080806101b29061030e565b915050610191565b508091505092915050565b600080fd5b6000819050919050565b6101dd816101ca565b81146101e857600080fd5b50565b6000813590506101fa816101d4565b92915050565b600060208284031215610216576102156101c5565b5b6000610224848285016101eb565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561026757808201518184015260208101905061024c565b60008484015250505050565b6000601f19601f8301169050919050565b600061028f8261022d565b6102998185610238565b93506102a9818560208601610249565b6102b281610273565b840191505092915050565b600060208201905081810360008301526102d78184610284565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610319826101ca565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361034b5761034a6102df565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610390826101ca565b915061039b836101ca565b9250826103ab576103aa610356565b5b828204905092915050565b60006103c1826101ca565b91506103cc836101ca565b9250826103dc576103db610356565b5b828206905092915050565b60006103f2826101ca565b91506103fd836101ca565b9250828201905080821115610415576104146102df565b5b92915050565b6000610426826101ca565b9150610431836101ca565b925082820261043f816101ca565b91508282048414831517610456576104556102df565b5b509291505056fea2646970667358221220cccb4df30ec8a16696495c997e06e838c1e2749780bc6f12b6b44a5162b5881164736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x493 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB6E12936 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x200 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x2BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x6D DUP4 PUSH2 0x103 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7B DUP5 DUP4 PUSH2 0x13A JUMP JUMPDEST SWAP1 POP DUP1 DUP5 SUB PUSH2 0xC3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E756D6265722069732061726D7374726F6E6700000000000000000000000000 DUP2 MSTORE POP SWAP3 POP POP POP PUSH2 0xFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E756D626572206973206E6F742061726D2D7374726F6E670000000000000000 DUP2 MSTORE POP SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x0 DUP4 EQ PUSH2 0x131 JUMPI DUP1 DUP1 PUSH2 0x11A SWAP1 PUSH2 0x30E JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP4 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x385 JUMP JUMPDEST SWAP3 POP PUSH2 0x107 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x0 DUP5 EQ PUSH2 0x17D JUMPI PUSH2 0x15C PUSH1 0xA DUP6 PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x3B6 JUMP JUMPDEST DUP5 PUSH2 0x187 JUMP JUMPDEST DUP2 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x3E7 JUMP JUMPDEST SWAP1 POP PUSH1 0xA DUP5 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x385 JUMP JUMPDEST SWAP4 POP PUSH2 0x13E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BA JUMPI DUP5 DUP3 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x41B JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x1B2 SWAP1 PUSH2 0x30E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x191 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DD DUP2 PUSH2 0x1CA JUMP JUMPDEST DUP2 EQ PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FA DUP2 PUSH2 0x1D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x216 JUMPI PUSH2 0x215 PUSH2 0x1C5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x224 DUP5 DUP3 DUP6 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x267 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x24C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28F DUP3 PUSH2 0x22D JUMP JUMPDEST PUSH2 0x299 DUP2 DUP6 PUSH2 0x238 JUMP JUMPDEST SWAP4 POP PUSH2 0x2A9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x249 JUMP JUMPDEST PUSH2 0x2B2 DUP2 PUSH2 0x273 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D7 DUP2 DUP5 PUSH2 0x284 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x319 DUP3 PUSH2 0x1CA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x34B JUMPI PUSH2 0x34A PUSH2 0x2DF JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x390 DUP3 PUSH2 0x1CA JUMP JUMPDEST SWAP2 POP PUSH2 0x39B DUP4 PUSH2 0x1CA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3AB JUMPI PUSH2 0x3AA PUSH2 0x356 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C1 DUP3 PUSH2 0x1CA JUMP JUMPDEST SWAP2 POP PUSH2 0x3CC DUP4 PUSH2 0x1CA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3DC JUMPI PUSH2 0x3DB PUSH2 0x356 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F2 DUP3 PUSH2 0x1CA JUMP JUMPDEST SWAP2 POP PUSH2 0x3FD DUP4 PUSH2 0x1CA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x415 JUMPI PUSH2 0x414 PUSH2 0x2DF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x426 DUP3 PUSH2 0x1CA JUMP JUMPDEST SWAP2 POP PUSH2 0x431 DUP4 PUSH2 0x1CA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x43F DUP2 PUSH2 0x1CA JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x456 JUMPI PUSH2 0x455 PUSH2 0x2DF JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0xCB 0x4D RETURN 0xE 0xC8 LOG1 PUSH7 0x96495C997E06E8 CODESIZE 0xC1 0xE2 PUSH21 0x9780BC6F12B6B44A5162B5881164736F6C63430008 SLT STOP CALLER ",
							"sourceMap": "75:1046:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@calculateNum_98": {
									"entryPoint": 314,
									"id": 98,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@calculatepower_130": {
									"entryPoint": 391,
									"id": 130,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@checkArmstrong_34": {
									"entryPoint": 96,
									"id": 34,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@digitCalculate_61": {
									"entryPoint": 259,
									"id": 61,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 585,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 735,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 854,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_uint256": {
									"entryPoint": 468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3961:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:1"
															},
															"nodeType": "YulIf",
															"src": "766:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:1",
														"type": ""
													}
												],
												"src": "690:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1084:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1095:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1111:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1105:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1105:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1095:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1067:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1077:6:1",
														"type": ""
													}
												],
												"src": "1025:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1226:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1243:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1248:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1236:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1236:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1236:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1264:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1283:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1279:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1279:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1264:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1198:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1203:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1214:11:1",
														"type": ""
													}
												],
												"src": "1130:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1367:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1377:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1386:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1381:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1446:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1471:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1476:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1467:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1467:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1490:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1495:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1486:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1486:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1480:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1480:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1460:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1460:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1460:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1407:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1410:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1404:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1404:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1418:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1420:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1429:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1432:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1425:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1425:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1420:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1400:3:1",
																"statements": []
															},
															"src": "1396:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1529:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1534:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1525:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1525:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1543:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1518:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1518:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1518:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1349:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1354:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1359:6:1",
														"type": ""
													}
												],
												"src": "1305:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1605:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1615:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1633:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1640:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1629:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1629:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1649:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1645:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1645:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1625:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1625:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1615:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1588:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1598:6:1",
														"type": ""
													}
												],
												"src": "1557:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1757:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1767:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1814:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1781:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1781:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1771:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1829:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1895:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1900:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1836:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1829:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1955:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1962:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1951:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1951:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1969:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1974:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "1916:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1916:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1916:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1990:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2001:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2028:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2006:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2006:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1997:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1997:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1990:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1738:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1753:3:1",
														"type": ""
													}
												],
												"src": "1665:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2166:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2176:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2188:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2199:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2184:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2184:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2176:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2223:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2234:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2219:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2219:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2242:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2238:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2238:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2212:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2212:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2212:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2268:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2340:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2349:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2276:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2276:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2268:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2138:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2150:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2161:4:1",
														"type": ""
													}
												],
												"src": "2048:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2395:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2412:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2415:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2405:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2405:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2405:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2509:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2512:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2502:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2502:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2533:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2536:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2526:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2526:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2526:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2367:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2596:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2606:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2633:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2615:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2615:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2606:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2729:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2731:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2731:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2731:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2654:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2661:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2651:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2651:77:1"
															},
															"nodeType": "YulIf",
															"src": "2648:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2760:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2771:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2778:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2767:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2767:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2760:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2582:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2592:3:1",
														"type": ""
													}
												],
												"src": "2553:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2820:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2837:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2840:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2830:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2830:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2830:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2934:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2937:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2927:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2927:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2927:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2958:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2961:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2951:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2951:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2951:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2792:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3020:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3030:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3053:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3035:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3035:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3030:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3064:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3087:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3069:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3069:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3064:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3111:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "3113:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3113:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3113:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3108:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3101:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3101:9:1"
															},
															"nodeType": "YulIf",
															"src": "3098:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3143:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3152:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3155:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3148:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3148:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "3143:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3009:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3012:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "3018:1:1",
														"type": ""
													}
												],
												"src": "2978:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3203:142:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3213:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3236:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3218:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3218:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3213:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3247:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3270:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3252:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3252:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3247:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3294:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "3296:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3296:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3296:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3291:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3284:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3284:9:1"
															},
															"nodeType": "YulIf",
															"src": "3281:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3325:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3334:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3337:1:1"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "3325:1:1"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3192:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3195:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "3201:1:1",
														"type": ""
													}
												],
												"src": "3169:176:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3395:147:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3405:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3428:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3410:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3410:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3405:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3439:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3462:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3444:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3444:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3439:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3473:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3484:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3487:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3480:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3480:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3473:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3513:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3515:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3515:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3515:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3505:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3508:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3502:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3502:10:1"
															},
															"nodeType": "YulIf",
															"src": "3499:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3382:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3385:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3391:3:1",
														"type": ""
													}
												],
												"src": "3351:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3596:362:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3629:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3611:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3611:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3606:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3640:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3663:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3645:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3645:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3640:1:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3674:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3697:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3700:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3693:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3693:9:1"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "3678:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3711:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "3740:11:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3722:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3722:30:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "3711:7:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3929:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3931:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3931:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3931:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3862:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3855:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3855:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "3885:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "3892:7:1"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "3901:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "3888:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3888:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "3882:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3882:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "3835:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3835:83:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3815:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3815:113:1"
															},
															"nodeType": "YulIf",
															"src": "3812:139:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3579:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3582:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "3588:7:1",
														"type": ""
													}
												],
												"src": "3548:410:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063b6e1293614610030575b600080fd5b61004a60048036038101906100459190610200565b610060565b60405161005791906102bd565b60405180910390f35b6060600061006d83610103565b9050600061007b848361013a565b90508084036100c3576040518060400160405280601381526020017f4e756d6265722069732061726d7374726f6e6700000000000000000000000000815250925050506100fe565b6040518060400160405280601881526020017f4e756d626572206973206e6f742061726d2d7374726f6e670000000000000000815250925050505b919050565b6000805b6000831461013157808061011a9061030e565b915050600a8361012a9190610385565b9250610107565b80915050919050565b6000805b6000841461017d5761015c600a8561015691906103b6565b84610187565b8161016791906103e7565b9050600a846101769190610385565b935061013e565b8091505092915050565b6000806001905060005b838110156101ba5784826101a5919061041b565b915080806101b29061030e565b915050610191565b508091505092915050565b600080fd5b6000819050919050565b6101dd816101ca565b81146101e857600080fd5b50565b6000813590506101fa816101d4565b92915050565b600060208284031215610216576102156101c5565b5b6000610224848285016101eb565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561026757808201518184015260208101905061024c565b60008484015250505050565b6000601f19601f8301169050919050565b600061028f8261022d565b6102998185610238565b93506102a9818560208601610249565b6102b281610273565b840191505092915050565b600060208201905081810360008301526102d78184610284565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610319826101ca565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361034b5761034a6102df565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610390826101ca565b915061039b836101ca565b9250826103ab576103aa610356565b5b828204905092915050565b60006103c1826101ca565b91506103cc836101ca565b9250826103dc576103db610356565b5b828206905092915050565b60006103f2826101ca565b91506103fd836101ca565b9250828201905080821115610415576104146102df565b5b92915050565b6000610426826101ca565b9150610431836101ca565b925082820261043f816101ca565b91508282048414831517610456576104556102df565b5b509291505056fea2646970667358221220cccb4df30ec8a16696495c997e06e838c1e2749780bc6f12b6b44a5162b5881164736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB6E12936 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x200 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x2BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x6D DUP4 PUSH2 0x103 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7B DUP5 DUP4 PUSH2 0x13A JUMP JUMPDEST SWAP1 POP DUP1 DUP5 SUB PUSH2 0xC3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E756D6265722069732061726D7374726F6E6700000000000000000000000000 DUP2 MSTORE POP SWAP3 POP POP POP PUSH2 0xFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E756D626572206973206E6F742061726D2D7374726F6E670000000000000000 DUP2 MSTORE POP SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x0 DUP4 EQ PUSH2 0x131 JUMPI DUP1 DUP1 PUSH2 0x11A SWAP1 PUSH2 0x30E JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP4 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x385 JUMP JUMPDEST SWAP3 POP PUSH2 0x107 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x0 DUP5 EQ PUSH2 0x17D JUMPI PUSH2 0x15C PUSH1 0xA DUP6 PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x3B6 JUMP JUMPDEST DUP5 PUSH2 0x187 JUMP JUMPDEST DUP2 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x3E7 JUMP JUMPDEST SWAP1 POP PUSH1 0xA DUP5 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x385 JUMP JUMPDEST SWAP4 POP PUSH2 0x13E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BA JUMPI DUP5 DUP3 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x41B JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x1B2 SWAP1 PUSH2 0x30E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x191 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DD DUP2 PUSH2 0x1CA JUMP JUMPDEST DUP2 EQ PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FA DUP2 PUSH2 0x1D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x216 JUMPI PUSH2 0x215 PUSH2 0x1C5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x224 DUP5 DUP3 DUP6 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x267 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x24C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28F DUP3 PUSH2 0x22D JUMP JUMPDEST PUSH2 0x299 DUP2 DUP6 PUSH2 0x238 JUMP JUMPDEST SWAP4 POP PUSH2 0x2A9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x249 JUMP JUMPDEST PUSH2 0x2B2 DUP2 PUSH2 0x273 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D7 DUP2 DUP5 PUSH2 0x284 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x319 DUP3 PUSH2 0x1CA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x34B JUMPI PUSH2 0x34A PUSH2 0x2DF JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x390 DUP3 PUSH2 0x1CA JUMP JUMPDEST SWAP2 POP PUSH2 0x39B DUP4 PUSH2 0x1CA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3AB JUMPI PUSH2 0x3AA PUSH2 0x356 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C1 DUP3 PUSH2 0x1CA JUMP JUMPDEST SWAP2 POP PUSH2 0x3CC DUP4 PUSH2 0x1CA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3DC JUMPI PUSH2 0x3DB PUSH2 0x356 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F2 DUP3 PUSH2 0x1CA JUMP JUMPDEST SWAP2 POP PUSH2 0x3FD DUP4 PUSH2 0x1CA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x415 JUMPI PUSH2 0x414 PUSH2 0x2DF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x426 DUP3 PUSH2 0x1CA JUMP JUMPDEST SWAP2 POP PUSH2 0x431 DUP4 PUSH2 0x1CA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x43F DUP2 PUSH2 0x1CA JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x456 JUMPI PUSH2 0x455 PUSH2 0x2DF JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0xCB 0x4D RETURN 0xE 0xC8 LOG1 PUSH7 0x96495C997E06E8 CODESIZE 0xC1 0xE2 PUSH21 0x9780BC6F12B6B44A5162B5881164736F6C63430008 SLT STOP CALLER ",
							"sourceMap": "75:1046:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;100:346;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;154:13;179:10;192:19;207:3;192:14;:19::i;:::-;179:32;;222:20;245:24;258:3;263:5;245:12;:24::i;:::-;222:47;;290:15;283:3;:22;280:159;;321:30;;;;;;;;;;;;;;;;;;;;;;;280:159;392:35;;;;;;;;;;;;;;;;;;;;;100:346;;;;:::o;452:210::-;510:4;526:10;547:85;563:1;553:6;:11;547:85;;580:7;;;;;:::i;:::-;;;;618:2;611:6;:9;;;;:::i;:::-;602:18;;547:85;;;649:5;642:12;;;452:210;;;:::o;668:242::-;733:4;749:9;769:112;782:1;775:3;:8;769:112;;813:29;832:2;828:3;:6;;;;:::i;:::-;836:5;813:14;:29::i;:::-;806:4;:36;;;;:::i;:::-;799:43;;867:2;863:3;:6;;;;:::i;:::-;857:12;;769:112;;;898:4;891:11;;;668:242;;;;:::o;916:202::-;981:4;997:11;1010:1;997:14;;1026:6;1022:65;1038:5;1036:1;:7;1022:65;;;1074:1;1064:11;;;;;:::i;:::-;;;1045:3;;;;;:::i;:::-;;;;1022:65;;;;1104:6;1097:13;;;916:202;;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:99::-;1077:6;1111:5;1105:12;1095:22;;1025:99;;;:::o;1130:169::-;1214:11;1248:6;1243:3;1236:19;1288:4;1283:3;1279:14;1264:29;;1130:169;;;;:::o;1305:246::-;1386:1;1396:113;1410:6;1407:1;1404:13;1396:113;;;1495:1;1490:3;1486:11;1480:18;1476:1;1471:3;1467:11;1460:39;1432:2;1429:1;1425:10;1420:15;;1396:113;;;1543:1;1534:6;1529:3;1525:16;1518:27;1367:184;1305:246;;;:::o;1557:102::-;1598:6;1649:2;1645:7;1640:2;1633:5;1629:14;1625:28;1615:38;;1557:102;;;:::o;1665:377::-;1753:3;1781:39;1814:5;1781:39;:::i;:::-;1836:71;1900:6;1895:3;1836:71;:::i;:::-;1829:78;;1916:65;1974:6;1969:3;1962:4;1955:5;1951:16;1916:65;:::i;:::-;2006:29;2028:6;2006:29;:::i;:::-;2001:3;1997:39;1990:46;;1757:285;1665:377;;;;:::o;2048:313::-;2161:4;2199:2;2188:9;2184:18;2176:26;;2248:9;2242:4;2238:20;2234:1;2223:9;2219:17;2212:47;2276:78;2349:4;2340:6;2276:78;:::i;:::-;2268:86;;2048:313;;;;:::o;2367:180::-;2415:77;2412:1;2405:88;2512:4;2509:1;2502:15;2536:4;2533:1;2526:15;2553:233;2592:3;2615:24;2633:5;2615:24;:::i;:::-;2606:33;;2661:66;2654:5;2651:77;2648:103;;2731:18;;:::i;:::-;2648:103;2778:1;2771:5;2767:13;2760:20;;2553:233;;;:::o;2792:180::-;2840:77;2837:1;2830:88;2937:4;2934:1;2927:15;2961:4;2958:1;2951:15;2978:185;3018:1;3035:20;3053:1;3035:20;:::i;:::-;3030:25;;3069:20;3087:1;3069:20;:::i;:::-;3064:25;;3108:1;3098:35;;3113:18;;:::i;:::-;3098:35;3155:1;3152;3148:9;3143:14;;2978:185;;;;:::o;3169:176::-;3201:1;3218:20;3236:1;3218:20;:::i;:::-;3213:25;;3252:20;3270:1;3252:20;:::i;:::-;3247:25;;3291:1;3281:35;;3296:18;;:::i;:::-;3281:35;3337:1;3334;3330:9;3325:14;;3169:176;;;;:::o;3351:191::-;3391:3;3410:20;3428:1;3410:20;:::i;:::-;3405:25;;3444:20;3462:1;3444:20;:::i;:::-;3439:25;;3487:1;3484;3480:9;3473:16;;3508:3;3505:1;3502:10;3499:36;;;3515:18;;:::i;:::-;3499:36;3351:191;;;;:::o;3548:410::-;3588:7;3611:20;3629:1;3611:20;:::i;:::-;3606:25;;3645:20;3663:1;3645:20;:::i;:::-;3640:25;;3700:1;3697;3693:9;3722:30;3740:11;3722:30;:::i;:::-;3711:41;;3901:1;3892:7;3888:15;3885:1;3882:22;3862:1;3855:9;3835:83;3812:139;;3931:18;;:::i;:::-;3812:139;3596:362;3548:410;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "234200",
								"executionCost": "275",
								"totalCost": "234475"
							},
							"external": {
								"checkArmstrong(uint256)": "infinite"
							},
							"internal": {
								"calculateNum(uint256,uint256)": "infinite",
								"calculatepower(uint256,uint256)": "infinite",
								"digitCalculate(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 75,
									"end": 1121,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 75,
									"end": 1121,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 75,
									"end": 1121,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 75,
									"end": 1121,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 75,
									"end": 1121,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 75,
									"end": 1121,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 75,
									"end": 1121,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 75,
									"end": 1121,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 75,
									"end": 1121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 75,
									"end": 1121,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 75,
									"end": 1121,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 75,
									"end": 1121,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 75,
									"end": 1121,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 75,
									"end": 1121,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 75,
									"end": 1121,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 75,
									"end": 1121,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 75,
									"end": 1121,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 75,
									"end": 1121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 75,
									"end": 1121,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 75,
									"end": 1121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 75,
									"end": 1121,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cccb4df30ec8a16696495c997e06e838c1e2749780bc6f12b6b44a5162b5881164736f6c63430008120033",
									".code": [
										{
											"begin": 75,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 75,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75,
											"end": 1121,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1121,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 75,
											"end": 1121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 75,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 75,
											"end": 1121,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1121,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 75,
											"end": 1121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75,
											"end": 1121,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 75,
											"end": 1121,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "B6E12936"
										},
										{
											"begin": 75,
											"end": 1121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 75,
											"end": 1121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 75,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 100,
											"end": 446,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 100,
											"end": 446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 100,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 100,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 100,
											"end": 446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 100,
											"end": 446,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 100,
											"end": 446,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 100,
											"end": 446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 100,
											"end": 446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 100,
											"end": 446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 100,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 100,
											"end": 446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 100,
											"end": 446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 100,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 100,
											"end": 446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 100,
											"end": 446,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 100,
											"end": 446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 100,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 100,
											"end": 446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 100,
											"end": 446,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 100,
											"end": 446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 100,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 100,
											"end": 446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 100,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 100,
											"end": 446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 100,
											"end": 446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 100,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 100,
											"end": 446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 100,
											"end": 446,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 100,
											"end": 446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 100,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 100,
											"end": 446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 100,
											"end": 446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 100,
											"end": 446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 100,
											"end": 446,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 100,
											"end": 446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 100,
											"end": 446,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 100,
											"end": 446,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 100,
											"end": 446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 154,
											"end": 167,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 179,
											"end": 189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 207,
											"end": 210,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 192,
											"end": 211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 211,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 192,
											"end": 211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 179,
											"end": 211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 222,
											"end": 242,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 258,
											"end": 261,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 263,
											"end": 268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 245,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 245,
											"end": 269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 245,
											"end": 269,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 245,
											"end": 269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 222,
											"end": 269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 222,
											"end": 269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 290,
											"end": 305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 283,
											"end": 286,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 283,
											"end": 305,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 280,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 280,
											"end": 439,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 321,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 321,
											"end": 351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 321,
											"end": 351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 321,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 321,
											"end": 351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 321,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 321,
											"end": 351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 321,
											"end": 351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 321,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 321,
											"end": 351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 321,
											"end": 351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 321,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 321,
											"end": 351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 321,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "4E756D6265722069732061726D7374726F6E6700000000000000000000000000"
										},
										{
											"begin": 321,
											"end": 351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 321,
											"end": 351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 321,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 321,
											"end": 351,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 321,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 321,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 321,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 321,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 321,
											"end": 351,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 280,
											"end": 439,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 280,
											"end": 439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 392,
											"end": 427,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 392,
											"end": 427,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 392,
											"end": 427,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 392,
											"end": 427,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 392,
											"end": 427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 392,
											"end": 427,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 392,
											"end": 427,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 392,
											"end": 427,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 392,
											"end": 427,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 392,
											"end": 427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 392,
											"end": 427,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 392,
											"end": 427,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 392,
											"end": 427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 392,
											"end": 427,
											"name": "PUSH",
											"source": 0,
											"value": "4E756D626572206973206E6F742061726D2D7374726F6E670000000000000000"
										},
										{
											"begin": 392,
											"end": 427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 392,
											"end": 427,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 392,
											"end": 427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 392,
											"end": 427,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 392,
											"end": 427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 392,
											"end": 427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 392,
											"end": 427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 100,
											"end": 446,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 100,
											"end": 446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 100,
											"end": 446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 100,
											"end": 446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 100,
											"end": 446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 100,
											"end": 446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 452,
											"end": 662,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 452,
											"end": 662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 510,
											"end": 514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 536,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 547,
											"end": 632,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 547,
											"end": 632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 563,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 553,
											"end": 564,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 547,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 547,
											"end": 632,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 580,
											"end": 587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 580,
											"end": 587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 580,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 580,
											"end": 587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 580,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 580,
											"end": 587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 580,
											"end": 587,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 580,
											"end": 587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 580,
											"end": 587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 580,
											"end": 587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 580,
											"end": 587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 618,
											"end": 620,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 611,
											"end": 617,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 611,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 611,
											"end": 620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 611,
											"end": 620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 611,
											"end": 620,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 611,
											"end": 620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 602,
											"end": 620,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 602,
											"end": 620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 547,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 547,
											"end": 632,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 547,
											"end": 632,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 547,
											"end": 632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 649,
											"end": 654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 642,
											"end": 654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 642,
											"end": 654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 642,
											"end": 654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 452,
											"end": 662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 452,
											"end": 662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 452,
											"end": 662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 452,
											"end": 662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 668,
											"end": 910,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 668,
											"end": 910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 733,
											"end": 737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 749,
											"end": 758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 769,
											"end": 881,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 769,
											"end": 881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 782,
											"end": 783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 778,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 775,
											"end": 783,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 769,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 769,
											"end": 881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 813,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 832,
											"end": 834,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 828,
											"end": 831,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 828,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 828,
											"end": 834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 828,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 828,
											"end": 834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 828,
											"end": 834,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 836,
											"end": 841,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 813,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 813,
											"end": 842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 813,
											"end": 842,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 813,
											"end": 842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 806,
											"end": 810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 806,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 806,
											"end": 842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 806,
											"end": 842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 806,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 806,
											"end": 842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 806,
											"end": 842,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 806,
											"end": 842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 799,
											"end": 842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 799,
											"end": 842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 867,
											"end": 869,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 863,
											"end": 866,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 863,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 863,
											"end": 869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 863,
											"end": 869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 863,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 863,
											"end": 869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 863,
											"end": 869,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 863,
											"end": 869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 857,
											"end": 869,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 857,
											"end": 869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 769,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 769,
											"end": 881,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 769,
											"end": 881,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 769,
											"end": 881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 898,
											"end": 902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 891,
											"end": 902,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 891,
											"end": 902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 891,
											"end": 902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 668,
											"end": 910,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 668,
											"end": 910,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 668,
											"end": 910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 668,
											"end": 910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 668,
											"end": 910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 916,
											"end": 1118,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 916,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 981,
											"end": 985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 997,
											"end": 1008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1011,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 997,
											"end": 1011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 997,
											"end": 1011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1032,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1043,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1043,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1075,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1075,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1064,
											"end": 1075,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1064,
											"end": 1075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1075,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1064,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1075,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1045,
											"end": 1048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1045,
											"end": 1048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1048,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1045,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 916,
											"end": 1118,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 916,
											"end": 1118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 916,
											"end": 1118,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 916,
											"end": 1118,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 916,
											"end": 1118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1117,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1299,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1130,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1225,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1243,
											"end": 1246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1288,
											"end": 1292,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1286,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1293,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1299,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1299,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1305,
											"end": 1551,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1305,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1386,
											"end": 1387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1509,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1396,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1416,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1417,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1509,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1396,
											"end": 1509,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1496,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1490,
											"end": 1493,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1498,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1474,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1478,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 1434,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1425,
											"end": 1435,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1420,
											"end": 1435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1420,
											"end": 1435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1396,
											"end": 1509,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1509,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1396,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1543,
											"end": 1544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1532,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1541,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1545,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 1551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1305,
											"end": 1551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1305,
											"end": 1551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1305,
											"end": 1551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1305,
											"end": 1551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1557,
											"end": 1659,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1557,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1649,
											"end": 1651,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1645,
											"end": 1652,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1642,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1633,
											"end": 1638,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1625,
											"end": 1653,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1653,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1653,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1557,
											"end": 1659,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1557,
											"end": 1659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1557,
											"end": 1659,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1557,
											"end": 1659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1665,
											"end": 2042,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1665,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1781,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1814,
											"end": 1819,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1781,
											"end": 1820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1820,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1781,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1900,
											"end": 1906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1898,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1836,
											"end": 1907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1907,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1836,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1829,
											"end": 1907,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1829,
											"end": 1907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1974,
											"end": 1980,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 1972,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 1966,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1955,
											"end": 1960,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1967,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1916,
											"end": 1981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1981,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1916,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2028,
											"end": 2034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2006,
											"end": 2035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2035,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2006,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2004,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 2036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1990,
											"end": 2036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1990,
											"end": 2036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 2042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1665,
											"end": 2042,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1665,
											"end": 2042,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1665,
											"end": 2042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1665,
											"end": 2042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1665,
											"end": 2042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2361,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2048,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2201,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2188,
											"end": 2197,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2202,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2257,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 2235,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2223,
											"end": 2232,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2349,
											"end": 2353,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2346,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2276,
											"end": 2354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2354,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2276,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2354,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2361,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2361,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2547,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2367,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2492,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2412,
											"end": 2413,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2493,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2512,
											"end": 2516,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2509,
											"end": 2510,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2502,
											"end": 2517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2540,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2533,
											"end": 2534,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2526,
											"end": 2541,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2786,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2553,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 2595,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2633,
											"end": 2638,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2615,
											"end": 2639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2639,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2615,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2639,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2661,
											"end": 2727,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2654,
											"end": 2659,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2728,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2648,
											"end": 2751,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2731,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2731,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 2749,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2731,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2751,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2648,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2778,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2771,
											"end": 2776,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2760,
											"end": 2780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2760,
											"end": 2780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2972,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2792,
											"end": 2972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2917,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2837,
											"end": 2838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2918,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 2941,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2934,
											"end": 2935,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2927,
											"end": 2942,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2958,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2966,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3163,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2978,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3018,
											"end": 3019,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3035,
											"end": 3055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3053,
											"end": 3054,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3035,
											"end": 3055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3035,
											"end": 3055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3035,
											"end": 3055,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3035,
											"end": 3055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3030,
											"end": 3055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3030,
											"end": 3055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3087,
											"end": 3088,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3069,
											"end": 3089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3089,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3069,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3089,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3108,
											"end": 3109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3098,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3098,
											"end": 3133,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3113,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3113,
											"end": 3131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3131,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3113,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3098,
											"end": 3133,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3098,
											"end": 3133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3152,
											"end": 3153,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3148,
											"end": 3157,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3157,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3163,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3169,
											"end": 3345,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3169,
											"end": 3345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3218,
											"end": 3238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3236,
											"end": 3237,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3218,
											"end": 3238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3218,
											"end": 3238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3218,
											"end": 3238,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3218,
											"end": 3238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3238,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3270,
											"end": 3271,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3252,
											"end": 3272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3272,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3252,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3247,
											"end": 3272,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3247,
											"end": 3272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3292,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3281,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3281,
											"end": 3316,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3296,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3296,
											"end": 3314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3314,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3296,
											"end": 3314,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3281,
											"end": 3316,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3281,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3337,
											"end": 3338,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3335,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3339,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3339,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3169,
											"end": 3345,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3169,
											"end": 3345,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3169,
											"end": 3345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3169,
											"end": 3345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3169,
											"end": 3345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3542,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3351,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3391,
											"end": 3394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3428,
											"end": 3429,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3410,
											"end": 3430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3430,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3444,
											"end": 3464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3462,
											"end": 3463,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3444,
											"end": 3464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3444,
											"end": 3464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3444,
											"end": 3464,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3444,
											"end": 3464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3464,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3488,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3485,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3511,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3505,
											"end": 3506,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3502,
											"end": 3512,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3535,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3499,
											"end": 3535,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3515,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3515,
											"end": 3533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3533,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3515,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3535,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3499,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3542,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3958,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3548,
											"end": 3958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3611,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3629,
											"end": 3630,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3611,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3611,
											"end": 3631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3611,
											"end": 3631,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3611,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3631,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3631,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3645,
											"end": 3665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3663,
											"end": 3664,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3645,
											"end": 3665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3645,
											"end": 3665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3645,
											"end": 3665,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3645,
											"end": 3665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3640,
											"end": 3665,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3640,
											"end": 3665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3701,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3697,
											"end": 3698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3693,
											"end": 3702,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3722,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3740,
											"end": 3751,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3722,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3722,
											"end": 3752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3722,
											"end": 3752,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3722,
											"end": 3752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3902,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3899,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3888,
											"end": 3903,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3885,
											"end": 3886,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3882,
											"end": 3904,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3862,
											"end": 3863,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3855,
											"end": 3864,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3835,
											"end": 3918,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3812,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3812,
											"end": 3951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3931,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3931,
											"end": 3949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3949,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3931,
											"end": 3949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3812,
											"end": 3951,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3812,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3958,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3958,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"armstrong.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"checkArmstrong(uint256)": "b6e12936"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"checkArmstrong\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"armstrong.sol\":\"Armstrong\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"armstrong.sol\":{\"keccak256\":\"0x4b01de9926e56fb37042a242fa187716d9a4896ef6269ab61e0cadc9307f5474\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ec185562525fef84ec0f86c56b563cdd44e47530e02fa12d1aafebde73f34a99\",\"dweb:/ipfs/QmRv1F7AvtXRe6MbEndEDfLS8Xhcjz15yVfqLfDsH6uRN1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"armstrong.sol": {
				"ast": {
					"absolutePath": "armstrong.sol",
					"exportedSymbols": {
						"Armstrong": [
							131
						]
					},
					"id": 132,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Armstrong",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 131,
							"linearizedBaseContracts": [
								131
							],
							"name": "Armstrong",
							"nameLocation": "84:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "168:278:0",
										"statements": [
											{
												"assignments": [
													9
												],
												"declarations": [
													{
														"constant": false,
														"id": 9,
														"mutability": "mutable",
														"name": "digit",
														"nameLocation": "184:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 33,
														"src": "179:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 8,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "179:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 13,
												"initialValue": {
													"arguments": [
														{
															"id": 11,
															"name": "num",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "207:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 10,
														"name": "digitCalculate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "192:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "192:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "179:32:0"
											},
											{
												"assignments": [
													15
												],
												"declarations": [
													{
														"constant": false,
														"id": 15,
														"mutability": "mutable",
														"name": "armstrongNumber",
														"nameLocation": "227:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 33,
														"src": "222:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 14,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "222:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 20,
												"initialValue": {
													"arguments": [
														{
															"id": 17,
															"name": "num",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "258:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 18,
															"name": "digit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "263:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 16,
														"name": "calculateNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "245:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "245:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "222:47:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 21,
														"name": "num",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "283:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 22,
														"name": "armstrongNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "290:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "283:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 31,
													"nodeType": "Block",
													"src": "377:62:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "4e756d626572206973206e6f742061726d2d7374726f6e67",
																		"id": 28,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "400:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_7514424a95245b899dd2fa5435edec14667cc50180399809d4e08eba965117f8",
																			"typeString": "literal_string \"Number is not arm-strong\""
																		},
																		"value": "Number is not arm-strong"
																	}
																],
																"id": 29,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "399:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_7514424a95245b899dd2fa5435edec14667cc50180399809d4e08eba965117f8",
																	"typeString": "literal_string \"Number is not arm-strong\""
																}
															},
															"functionReturnParameters": 7,
															"id": 30,
															"nodeType": "Return",
															"src": "392:35:0"
														}
													]
												},
												"id": 32,
												"nodeType": "IfStatement",
												"src": "280:159:0",
												"trueBody": {
													"id": 27,
													"nodeType": "Block",
													"src": "306:57:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "4e756d6265722069732061726d7374726f6e67",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "329:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_dca0cbe98f37581e0f4c946e8eaa504d6c99e4bca6baebd9c1fd4eb6cd7a8ce6",
																			"typeString": "literal_string \"Number is armstrong\""
																		},
																		"value": "Number is armstrong"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "328:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_dca0cbe98f37581e0f4c946e8eaa504d6c99e4bca6baebd9c1fd4eb6cd7a8ce6",
																	"typeString": "literal_string \"Number is armstrong\""
																}
															},
															"functionReturnParameters": 7,
															"id": 26,
															"nodeType": "Return",
															"src": "321:30:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "b6e12936",
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkArmstrong",
									"nameLocation": "109:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "num",
												"nameLocation": "129:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "124:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "124:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "123:10:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "154:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 5,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "154:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "153:15:0"
									},
									"scope": 131,
									"src": "100:346:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "515:147:0",
										"statements": [
											{
												"assignments": [
													42
												],
												"declarations": [
													{
														"constant": false,
														"id": 42,
														"mutability": "mutable",
														"name": "digit",
														"nameLocation": "531:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 60,
														"src": "526:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 41,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "526:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 43,
												"nodeType": "VariableDeclarationStatement",
												"src": "526:10:0"
											},
											{
												"body": {
													"id": 56,
													"nodeType": "Block",
													"src": "565:67:0",
													"statements": [
														{
															"expression": {
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "580:7:0",
																"subExpression": {
																	"id": 47,
																	"name": "digit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "580:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 49,
															"nodeType": "ExpressionStatement",
															"src": "580:7:0"
														},
														{
															"expression": {
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 50,
																	"name": "number",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 36,
																	"src": "602:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 53,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 51,
																		"name": "number",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 36,
																		"src": "611:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3130",
																		"id": 52,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "618:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"src": "611:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "602:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 55,
															"nodeType": "ExpressionStatement",
															"src": "602:18:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 44,
														"name": "number",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "553:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 45,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "563:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "553:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 57,
												"nodeType": "WhileStatement",
												"src": "547:85:0"
											},
											{
												"expression": {
													"id": 58,
													"name": "digit",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 42,
													"src": "649:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 40,
												"id": 59,
												"nodeType": "Return",
												"src": "642:12:0"
											}
										]
									},
									"id": 61,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "digitCalculate",
									"nameLocation": "461:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "number",
												"nameLocation": "481:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "476:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "476:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "475:13:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "510:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "510:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "509:6:0"
									},
									"scope": 131,
									"src": "452:210:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "738:172:0",
										"statements": [
											{
												"assignments": [
													71
												],
												"declarations": [
													{
														"constant": false,
														"id": 71,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "754:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 97,
														"src": "749:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 70,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "749:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 72,
												"nodeType": "VariableDeclarationStatement",
												"src": "749:9:0"
											},
											{
												"body": {
													"id": 93,
													"nodeType": "Block",
													"src": "784:97:0",
													"statements": [
														{
															"expression": {
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 76,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "799:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 84,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 77,
																		"name": "temp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 71,
																		"src": "806:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 81,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 79,
																					"name": "Num",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 63,
																					"src": "828:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "3130",
																					"id": 80,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "832:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"src": "828:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 82,
																				"name": "digit",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 65,
																				"src": "836:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 78,
																			"name": "calculatepower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 130,
																			"src": "813:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 83,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "813:29:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "806:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "799:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 86,
															"nodeType": "ExpressionStatement",
															"src": "799:43:0"
														},
														{
															"expression": {
																"id": 91,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 87,
																	"name": "Num",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 63,
																	"src": "857:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 90,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 88,
																		"name": "Num",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 63,
																		"src": "863:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3130",
																		"id": 89,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "867:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"src": "863:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "857:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 92,
															"nodeType": "ExpressionStatement",
															"src": "857:12:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 73,
														"name": "Num",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "775:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "782:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "775:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 94,
												"nodeType": "WhileStatement",
												"src": "769:112:0"
											},
											{
												"expression": {
													"id": 95,
													"name": "temp",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 71,
													"src": "898:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 69,
												"id": 96,
												"nodeType": "Return",
												"src": "891:11:0"
											}
										]
									},
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateNum",
									"nameLocation": "677:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "Num",
												"nameLocation": "695:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "690:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "690:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "digit",
												"nameLocation": "705:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "700:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "700:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "689:22:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "733:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "733:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:6:0"
									},
									"scope": 131,
									"src": "668:242:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "986:132:0",
										"statements": [
											{
												"assignments": [
													108
												],
												"declarations": [
													{
														"constant": false,
														"id": 108,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "1002:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 129,
														"src": "997:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 107,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "997:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 110,
												"initialValue": {
													"hexValue": "31",
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1010:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "997:14:0"
											},
											{
												"body": {
													"id": 125,
													"nodeType": "Block",
													"src": "1049:38:0",
													"statements": [
														{
															"expression": {
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 121,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 108,
																	"src": "1064:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "*=",
																"rightHandSide": {
																	"id": 122,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 100,
																	"src": "1074:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1064:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 124,
															"nodeType": "ExpressionStatement",
															"src": "1064:11:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 115,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "1036:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 116,
														"name": "power",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "1038:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1036:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 126,
												"initializationExpression": {
													"assignments": [
														112
													],
													"declarations": [
														{
															"constant": false,
															"id": 112,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1031:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 126,
															"src": "1026:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 111,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1026:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 114,
													"initialValue": {
														"hexValue": "30",
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1033:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1026:8:0"
												},
												"loopExpression": {
													"expression": {
														"id": 119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1045:3:0",
														"subExpression": {
															"id": 118,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "1045:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 120,
													"nodeType": "ExpressionStatement",
													"src": "1045:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1022:65:0"
											},
											{
												"expression": {
													"id": 127,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 108,
													"src": "1104:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 106,
												"id": 128,
												"nodeType": "Return",
												"src": "1097:13:0"
											}
										]
									},
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatepower",
									"nameLocation": "925:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "945:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "940:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "940:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "power",
												"nameLocation": "953:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "948:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "948:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:20:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "981:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "981:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "980:6:0"
									},
									"scope": 131,
									"src": "916:202:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 132,
							"src": "75:1046:0",
							"usedErrors": []
						}
					],
					"src": "39:1082:0"
				},
				"id": 0
			}
		}
	}
}